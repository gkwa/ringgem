version: '3'
options:
  output: prefixed
tasks:
  need-to-fix:
    cmds:
      - task: install-docker-in-incus-container
  northflier-buggy:
    cmds:
      - task: northflier
      - install-onejuly-on-linux
  northflier-with-dep-order:
    cmds:
      - task: run-kindsealion-on-linux
      - task: install-docker-on-linux
  northflier:
    cmds:
      - task: install-sops-on-linux
      - task: install-ansible
      - task: install-otel-collector-on-linux
      - task: install-httptap-on-linux
      - task: install-pass-on-linux
      - task: install-kpt-on-linux
      - task: install-nodejs-on-ubuntu
      - task: install-boilerplate-on-linux-and-macos
      - task: install-sysbox-on-ubuntu
      - task: install-cloudwatch-on-ubuntu
      - task: install-devbox-on-linux
      - task: install-atuin-on-linux
      - task: install-elasticsearch-on-ubuntu
      - task: install-kibana-on-ubuntu
      - task: install-fluentd-on-ubuntu
      - task: install-fullbus-on-linux
      - task: install-goldpuppy-on-ubuntu
      - task: install-incus-on-linux
      - task: install-quickwit-on-linux
      - task: install-restate-on-linux
      - task: install-needrestart-on-linux
      - task: install-otel-cli-on-linux
      - task: install-ringgem-testing-on-linux
      - task: install-silverdelay-on-linux
      - task: install-toml-cli-on-linux
      - task: install-txtar-on-linux
      - task: northflier-with-dep-order
      - task: upgrade-bash-completion-on-linux
      - task: deploy-dotfiles-on-linux
      - task: install-mlocate-on-linux
      - task: install-hey-on-linux
      - task: lxc-configure-on-ubuntu
      - task: install-package-upgrades-on-ubuntu
  install-cilium-on-linux:
    cmds:
      - bash -eux install-cilium-on-linux.sh
    deps:
      - configure-homebrew-on-linux
    status:
      - command -v cilium &>/dev/null
  install-cilium-hubble-on-linux:
    cmds:
      - sudo bash -eux install-cilium-hubble-on-linux.sh
    status:
      - command -v hubble &>/dev/null
  follow-cilium-gateway-tutorial:
    cmds:
      - task: install-cilium-on-linux
    deps:
      - install-kubectl-on-linux
  install-restate-on-linux:
    cmds:
      - bash -eux install-restate-on-linux.sh
    status:
      - command -v restate &>/dev/null
      - command -v restate-server &>/dev/null
  install-quickwit-on-linux:
    cmds:
      - bash -eux install-quickwit-on-linux.sh
    status:
      - command -v quickwit &>/dev/null
  deploy-dotfiles-on-linux:
    cmds:
      - sudo bash -eux deploy-dotfiles-on-linux.sh
    deps:
      - install-chezmoi-on-linux
  install-kpt-on-linux:
    cmds:
      - bash -eux install-kpt-on-linux.sh
    status:
      - command -v kpt &>/dev/null
  install-ringgem-testing-on-linux:
    deps:
      - install-mythai-on-linux
  check-for-python:
    cmds:
      - python3 --version >/dev/null
  install-atuin-on-linux:
    cmds:
      - bash -eux install-atuin-on-linux.sh
    status:
      - command -v atuin &>/dev/null
  install-docker-on-linux:
    cmds:
      - bash -eux install-docker-on-linux.sh
    status:
      - command -v docker &>/dev/null
  install-mythai-on-linux:
    cmds:
      - sudo bash -eux install-mythai-on-linux.sh
    deps:
      - check-for-python
      - install-uv-on-linux
    status:
      - command -v mythai &>/dev/null
  install-nix-on-linux:
    cmds:
      - bash -eux install-nix-on-linux.sh
    deps:
      - install-jq-on-linux
    status:
      - test -d /nix/var/nix/profiles/default/etc
  wait-for-cloud-init:
    cmds:
      - bash -eux wait-for-cloud-init.sh
  install-docker-in-incus-container:
    run: once
    cmds:
      - bash -eux install-docker-in-incus-container.sh
    deps:
      - install-incus-on-linux
  install-devbox-on-linux:
    cmds:
      - bash -eux install-devbox-on-linux.sh
    deps:
      - install-nix-on-linux
    status:
      - command -v devbox >/dev/null
  install-cargo-binstall-on-linux-using-cargo:
    cmds:
      - bash -eux install-cargo-binstall-on-linux-using-cargo.sh
    deps:
      - install-cargo-on-linux
    status:
      - cargo binstall --help >/dev/null
  install-cargo-on-linux:
    cmds:
      - bash -eux install-cargo-on-linux.sh
    status:
      - command -v cargo >/dev/null
  install-gpg-on-linux:
    cmds:
      - bash -eux install-gpg-on-linux.sh
    status:
      - command -v gpg >/dev/null
  install-golangci-lint-on-linux-using-go:
    cmds:
      - bash -eux install-golangci-lint-on-linux-using-go.sh
    status:
      - command -v golangci-lint &>/dev/null
  install-otel-collector-on-linux:
    cmds:
      - bash -eux install-otel-collector-on-linux.sh
    deps:
      - install-jq-on-linux
      - install-allbranding-on-linux
    status:
      - command -v otelcol >/dev/null
  install-needrestart-on-linux:
    cmds:
      - bash -eux install-needrestart-on-linux.sh
    status:
      - command -v needrestart &>/dev/null
  install-incus-on-linux:
    cmds:
      - sudo bash -eux install-incus-on-linux.sh
    status:
      - command -v incus >/dev/null
    deps:
      - install-gpg-on-linux
  install-txtar-on-linux:
    cmds:
      - sudo bash -eux install-txtar-on-linux.sh
    deps:
      - apt-yum-update
    status:
      - command -v txtar-x >/dev/null
  install-allbranding-on-linux:
    cmds:
      - |
        sudo --login --user linuxbrew bash -c '
          [ -s /etc/profile.d/homebrew.sh ] && source /etc/profile.d/homebrew.sh;
          brew install taylormonacelli/homebrew-tools/allbranding
        '
    deps:
      - configure-homebrew-on-linux
    status:
      - command -v allbranding >/dev/null
  install-toml-cli-on-linux:
    cmds:
      - sudo bash -eux install-toml-cli-on-linux.sh
    deps:
      - install-jq-on-linux
      - install-allbranding-on-linux
    status:
      - command -v toml >/dev/null
  install-nodejs-on-ubuntu:
    cmds:
      - sudo bash -eux install-nodejs-on-ubuntu.sh
      - |
        [ -s /etc/profile.d/homebrew.sh ] && source /etc/profile.d/homebrew.sh
        mylime touch nodejs
    deps:
      - apt-yum-update
    status:
      - command -v node >/dev/null
  install-package-upgrades-on-ubuntu:
    cmds:
      - sudo bash -eux install-package-upgrades-on-ubuntu.sh
      - mylime touch package-upgrades
    deps:
      - apt-yum-update
    status:
      - '! mylime newerthan 1h package-upgrades'
  install-elasticsearch-on-ubuntu:
    cmds:
      - task: apt-yum-update
      - task: install-elastic-ppa8-on-ubuntu
      - task: install-filebeat-on-ubuntu
      - sudo bash -eux install-elasticsearch-on-ubuntu.sh
    status:
      - test -x /usr/share/elasticsearch/bin/elasticsearch-cli
  install-wakemeops-on-ubuntu:
    cmds:
      - sudo bash -eux install-wakemeops-on-ubuntu.sh
    status:
      - test -f /etc/apt/sources.list.d/wakemeops.list
  install-kibana-on-ubuntu:
    cmds:
      - task: apt-yum-update
      - task: install-elastic-ppa8-on-ubuntu
      - sudo bash -eux install-kibana-on-ubuntu.sh
    status:
      - test -x /usr/share/kibana/bin/kibana-setup
  install-syncthing-on-ubuntu:
    cmds:
      - sudo bash -eux install-syncthing-on-ubuntu.sh
    status:
      - command -v syncthing >/dev/null
  install-glab-on-linux:
    cmds:
      - sudo bash -eux install-glab-on-linux.sh
    status:
      - command -v glab >/dev/null
  install-httptap-on-linux:
    cmds:
      - bash -eux install-httptap-on-linux.sh
    deps:
      - install-jq-on-linux
      - install-allbranding-on-linux
    status:
      - command -v httptap &>/dev/null
  install-onejuly-on-linux:
    cmds:
      - task: install-incus-on-linux
      - task: install-jq-on-linux
      - sudo bash -eux install-onejuly-on-linux.sh
    deps:
      - install-boilerplate-on-linux-and-macos
    status:
      - '[[ -d onejuly ]]'
  install-fullbus-on-linux:
    cmds:
      - sudo bash -eux install-fullbus-on-linux.sh
    status:
      - command -v fullbus >/dev/null
  install-boilerplate-on-linux-and-macos:
    cmds:
      - task: install-jq-on-linux
      - sudo bash -eux install-boilerplate-on-linux-and-macos.sh
    deps:
      - install-allbranding-on-linux
    status:
      - command -v boilerplate >/dev/null
  install-otel-cli-on-linux:
    cmds:
      - sudo bash -eux install-otel-cli-on-linux.sh
    deps:
      - install-tar-on-linux
      - install-jq-on-linux
    status:
      - command -v otel-cli >/dev/null
  install-ansible:
    cmds:
      - sudo bash -eux install-ansible.sh
    deps:
      - install-python-pip-on-linux
    status:
      - command -v ansible >/dev/null
  install-sysbox-on-ubuntu:
    cmds:
      - sudo bash -eux install-sysbox-on-ubuntu.sh
    deps:
      - apt-yum-update
      - install-jq-on-linux
    status:
      - test -x /usr/bin/sysbox-runc >/dev/null
  install-sops-on-linux:
    cmds:
      - sudo bash -eux install-sops-on-linux.sh
    deps:
      - install-jq-on-linux
      - install-allbranding-on-linux
    status:
      - command -v sops >/dev/null
  install-lxc-on-ubuntu:
    cmds:
      - sudo bash -eux install-lxc-on-ubuntu.sh
    deps:
      - apt-yum-update
    status:
      - command -v lxc >/dev/null
      - command -v lxc-wait >/dev/null
  lxc-configure-on-ubuntu:
    cmds:
      - sudo bash -eux lxc-configure-on-ubuntu.sh
    status:
      - 'grep --quiet "pool: default" <<< "$(lxc profile show default)"'
    deps:
      - install-lxc-on-ubuntu
  install-git-on-linux:
    cmds:
      - sudo bash -eux install-git-on-linux.sh
    status:
      - command -v git >/dev/null
  install-hey-on-linux:
    cmds:
      - sudo bash -eux install-hey-on-linux.sh
    status:
      - command -v hey >/dev/null
  bash-customize-kubectl-on-linux:
    cmds:
      - sudo bash -eux bash-customize-kubectl-on-linux.sh
    status:
      - grep --quiet "alias k=kubectl" ~/.profile
  install-cobra-cli-using-go:
    cmds:
      - sudo bash -eux install-cobra-cli-using-go.sh
    status:
      - cobra-cli help &>/dev/null
  install-uv-on-linux:
    cmds:
      - |
        sudo --login --user linuxbrew bash -c '
          [ -s /etc/profile.d/homebrew.sh ] && source /etc/profile.d/homebrew.sh;
          brew install uv
        '
    deps:
      - configure-homebrew-on-linux
    status:
      - command -v uv &>/dev/null
  install-blesh-on-linux:
    cmds:
      - sudo bash -eux install-blesh-on-linux.sh
    status:
      - command -v ble-update &>/dev/null
  configure-homebrew-on-linux:
    cmds:
      - sudo bash -eux configure-homebrew-on-linux.sh
    deps:
      - install-homebrew-on-linux
    status:
      - command -v brew &>/dev/null
  install-homebrew-on-linux:
    cmds:
      - sudo bash -eux install-homebrew-on-linux.sh
    deps:
      - apt-yum-update
    status:
      - test -x /home/linuxbrew/.linuxbrew/bin/brew

  install-fluentd-on-ubuntu:
    cmds:
      - sudo bash -eux install-fluentd-on-ubuntu.sh
    status:
      - command -v fluentd >/dev/null
  install-cloudwatch-on-ubuntu:
    cmds:
      - sudo bash -eux install-cloudwatch-on-ubuntu.sh
    status:
      - command -v fluentd >/dev/null
  install-elastic-ppa8-on-ubuntu:
    cmds:
      - sudo bash -eux install-elastic-ppa8-on-ubuntu.sh
    status:
      - test -f /etc/apt/sources.list.d/elastic-8.x.list
  install-cnspec-on-ubuntu:
    cmds:
      - sudo bash -eux install-cnspec-on-ubuntu.sh
    deps:
      - install-jq-on-linux
      - install-allbranding-on-linux
    status:
      - command -v cnquery >/dev/null
      - command -v cnspec >/dev/null
  install-filebeat-on-ubuntu:
    cmds:
      - sudo bash -eux install-filebeat-on-ubuntu.sh
    status:
      - filebeat version >/dev/null
  install-filebeat-on-windows:
    cmds:
      - powershell -File install-filebeat-on-windows.ps1
    status:
      - filebeat version | Out-Null
  install-goldpuppy-on-windows:
    cmds:
      - powershell -File install-goldpuppy-on-windows.ps1
    status:
      - goldpuppy --help | Out-Null
  install-goldpuppy-on-ubuntu:
    cmds:
      - sudo bash -eux install-goldpuppy-on-ubuntu.sh
    status:
      - goldpuppy --help >/dev/null
  upgrade-bash-completion-on-linux:
    deps:
      - apt-yum-update
    cmds:
      - sudo bash -eux install-bash-completion-on-linux.sh
    status:
      - |
        set -e
        set -u

        compareto_version="1:2.10-1ubuntu1"
        current_version=$(dpkg-query -W -f='${Version}' bash-completion)
        if dpkg --compare-versions "$current_version" ge "$compareto_version"; then
          echo "bash-completion version $current_version is greater than or equal to $compareto_version"
        else
          echo "bash-completion version $current_version is less than $compareto_version"
        fi
  install-bash-completion-on-linux:
    deps:
      - apt-yum-update
    cmds:
      - sudo bash -eux install-bash-completion-on-linux.sh
      - task: upgrade-bash-completion-on-linux
    status:
      - '[[ -d /usr/share/bash-completion/completions/ ]]'
  install-dulltrader-on-linux:
    cmds:
      - sudo bash -eux install-dulltrader-on-linux.sh
    status:
      - command -v dulltrader >/dev/null
  install-envsubst-on-linux:
    cmds:
      - sudo bash -eux install-envsubst-on-linux.sh
    status:
      - command -v envsubst >/dev/null
  install-go-task-bash-completion-on-linux:
    cmds:
      - sudo bash -eux install-go-task-bash-completion-on-linux.sh
    deps:
      - install-bash-completion-on-linux
    status:
      - test -s /usr/share/bash-completion/completions/task
  install-giantcloak-on-linux:
    cmds:
      - sudo bash -eux install-giantcloak-on-linux.sh
    status:
      - command -v giantcloak >/dev/null
  install-go-task-on-linux:
    cmds:
      - sudo bash -eux install-go-task-on-linux.sh
      - task: install-go-task-bash-completion-on-linux
    deps:
      - task: install-go-task-bash-completion-on-linux
    status:
      - task --version >/dev/null
  install-tar-on-linux:
    cmds:
      - sudo bash -eux install-tar-on-linux.sh
    status:
      - tar --version >/dev/null
  install-jq-on-linux:
    cmds:
      - task: apt-yum-update
      - sudo bash -eux install-jq-on-linux.sh
    status:
      - command -v jq >/dev/null
  install-kubectl-konfig-plugin:
    cmds:
      - sudo bash -eux install-kubectl-konfig-plugin.sh
    status:
      - test -x ~/.krew/store/konfig/v*/konfig-krew &>/dev/null
  install-kubectl-on-linux:
    cmds:
      - sudo bash -eux install-kubectl-on-linux.sh
    status:
      - command -v kubectl >/dev/null
    deps:
      - configure-homebrew-on-linux
  install-kubectl-stern-plugin:
    cmds:
      - task: install-kubectl-on-linux
      - sudo bash -eux install-kubectl-stern-plugin.sh
    deps:
      - install-kubectl-krew-plugin-manager
    status:
      - test -x ~/.krew/store/stern/v*/stern &>/dev/null
  install-pssh-on-linux:
    cmds:
      - sudo bash -eux install-pssh-on-linux.sh
    deps:
      - apt-yum-update
    status:
      - parallel-ssh --version >/dev/null
  install-python-on-linux:
    cmds:
      - sudo bash -e install-python-on-linux.sh
    status:
      - python3 --version >/dev/null
  install-python-pip-on-linux:
    cmds:
      - sudo bash -e install-python-pip-on-linux.sh
    status:
      - pip3 --version >/dev/null
  run-kindsealion-on-linux:
    run: once
    cmds:
      - task: install-incus-on-linux
      - sudo bash -eux run-kindsealion-on-linux.sh
    deps:
      - install-go-task-on-linux
    status:
      - command -v kindsealion &>/dev/null
  install-mlocate-on-linux:
    cmds:
      - sudo bash -eux install-mlocate-on-linux.sh
    deps:
      - apt-yum-update
    status:
      - command -v updatedb >/dev/null
  install-pass-on-linux:
    cmds:
      - bash -eux install-pass-on-linux.sh
    status:
      - command -v pass >/dev/null
  install-silverdelay-on-linux:
    cmds:
      - sudo bash -eux install-silverdelay-on-linux.sh
    status:
      - '! mylime newerthan 1d silverdelay'
  apt-yum-update:
    cmds:
      - sudo bash -eux apt-yum-update.sh
    status:
      - '! mylime newerthan 5m apt-update'
  install-kubectl-krew-plugin-manager:
    cmds:
      - |
        sudo --login --user linuxbrew bash -c '
          [ -s /etc/profile.d/homebrew.sh ] && source /etc/profile.d/homebrew.sh;
          brew install krew
        '
    deps:
      - configure-homebrew-on-linux
    status:
      - command -v kubectl-krew &>/dev/null
  install-chezmoi-on-linux:
    cmds:
      - bash -eux install-chezmoi-on-linux.sh
    deps:
      - configure-homebrew-on-linux
    status:
      - command -v chezmoi &>/dev/null
  install-apt-utils-on-ubuntu:
    cmds:
      - sudo bash -eux install-apt-utils-on-ubuntu.sh
    deps:
      - apt-yum-update
    status:
      - dpkg -l apt-utils | grep -q "^ii"
